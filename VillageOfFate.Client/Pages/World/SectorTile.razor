@using VillageOfFate.Localization
@inject ImageApi ImageApi
@inject NavigationManager NavigationManager
@inject SectorsApi SectorsApi
@inject Plurality Plurality

<div class="sector"
     @onclick="() => GoToSector(Sector.Id)"
     style="@Style"
     title="@Sector.Description">
    <div class="image-text">@Sector.Position</div>
    @if (VillagerCount > 0) {
        <div class="image-text" title="@VillagerCount @Plurality.Pick(VillagerCount, "villager", "villagers")">
            <img src="icons/people-count.svg" alt="villager count" width="16" height="16"/>
            @VillagerCount
        </div>
    }
    @if (string.IsNullOrEmpty(ImageUrl)) {
        <em>Loading...</em>
    }
</div>

@code {
    [Parameter] public required WebSector Sector { get; set; }

    public int VillagerCount { get; set; }
    protected string? ImageUrl { get; set; }
    public string Style => string.IsNullOrEmpty(ImageUrl)
                               ? "background-color: #f0f0f0"
                               : $"background-image: url('{ImageUrl}')";

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        VillagerCount = await SectorsApi.GetVillagerCountAsync(Sector.Id);
        ImageUrl = await ImageApi.GetImageUrlAsync(Sector.ImageId);
    }

    public void GoToSector(Guid? id) {
        if (id == null) return;
        NavigationManager.NavigateTo($"/world/sectors/{id}");
    }
}