@page "/villagers/{Id:guid}"
@using VillageOfFate.Localization
@inject VillagersApi VillagersService
@inject SectorsApi SectorsApi
@inject Plurality Plurality

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        @if (!SectorId.HasValue) {
            <li class="breadcrumb-item">
                <a href="/villagers">Villagers</a>
            </li>
        } else {
            <li class="breadcrumb-item">
                <a href="/world">World</a>
            </li>
            <li class="breadcrumb-item">
                <a href="/world/sectors/@SectorId">Sector @sector?.Position</a>
            </li>
        }
        <li class="breadcrumb-item active" aria-current="page">@(villager?.Name ?? "Villager")</li>
    </ol>
</nav>

@if (villager == null) {
    <title>Villager</title>
    <p>
        <em>Loading...</em>
    </p>
} else {
    <div class="profile">
        <ImageComponent ImageId="villager.ImageId" alt=""/>

        <div>
            <h1>@villager.Name</h1>
            <p>@villager.Age @Plurality.Pick(villager.Age, "Year", "Years") of Age</p>
            <p>@villager.Summary</p>

            <p>Gender: @villager.Gender</p>
            <p>Hunger: @villager.Hunger</p>
            <p>Position: @villager.SectorLocation</p>
        </div>
    </div>

    <h3>Emotions</h3>
    <ul>
        @foreach (var emotionalState in villager.Emotions.GetEmotions()) {
            <li>@emotionalState.Emotion - @emotionalState.Intensity%</li>
        }
    </ul>

    <div class="accordion" id="accordionPanels">
        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#items" aria-expanded="true" aria-controls="items">
                    Inventory
                </button>
            </h2>
            <div id="items" class="accordion-collapse collapse show">
                <div class="entity-container">
                    @if (villager.Inventory.Any()) {
                        @foreach (var item in villager.Inventory) {
                            <ItemComponent Item="@item"/>
                        }
                    } else {
                        <i>Empty</i>
                    }
                </div>
            </div>
        </div>

        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#activities" aria-expanded="true" aria-controls="activities">
                    Activities
                </button>
            </h2>
            <div id="activities" class="accordion-collapse collapse show">
                @if (villager.CurrentActivity == null) {
                    <i>Idle</i>
                } else {
                    <div>
                        <ActivityComponent Activity="@villager.CurrentActivity"/>
                    </div>
                }

                @foreach (var activity in villager.ActivityQueue) {
                    <div class="indent">
                        <ActivityComponent Activity="@activity"/>
                    </div>
                }
            </div>
        </div>


        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#events" aria-expanded="true" aria-controls="events">
                    Events
                </button>
            </h2>
            <div id="events" class="accordion-collapse collapse show">
                @if (events == null) {
                    <em>Loading...</em>
                } else {
                    @foreach (var webEvent in events) {
                        <EventComponent Event="@webEvent"/>
                    }
                }
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public Guid Id { get; set; }

    [SupplyParameterFromQuery(Name = "sectorId")]
    [Parameter]
    public Guid? SectorId { get; set; }

    private WebVillager? villager;
    private WebSector? sector;

    private WebEvent[]? events;

    protected override async Task OnParametersSetAsync() {
        villager = await VillagersService.GetVillagerAsync(Id);
        if (SectorId.HasValue) {
            sector = await SectorsApi.GetSectorAsync(SectorId.Value);
        }

        events = await VillagersService.GetVillagerEvents(Id);
    }
}