@inject UserApi users
@inject ItemsApi items
@inject DivineMessageService divineMessages

<div id="primary-actions" class="btn-group-vertical" role="group" aria-label="Actions">
    <!-- Divine Message -->
    <button class="action btn btn-outline-light"
            type="button"
            title="Send Divine Message"
            data-bs-toggle="collapse"
            data-bs-target="#divine-message">
        <i class="bi bi-journal-plus"></i>
    </button>
    <div id="divine-message"
         class="card float-left collapse"
         data-bs-parent="#primary-actions">
        <div class="card-header">
            <span>
                <label for="divine-message-text">Divine Message</label>
                <i class="bi bi-info-circle" title="Once per day, you may bestow a Divine Message to your villagers through the Priest's Bible."></i>
            </span>
            @if (CurrentUser == null) {
                <span class="placeholder col-4 float-end"></span>
            } else if (CurrentUser.BibleId == null) {
                <span class="text-warning-emphasis">Bible not found!</span>
            } else {
                <a href="@NavigationService.GetUrl(CurrentUser.BibleId.Value)" class="card-link float-end">Locate Bible</a>
            }
        </div>
        <div class="card-body">
            <textarea class="form-control" id="divine-message-text" rows="3" @bind="InputText"></textarea>
            <button class="btn btn-primary mt-3" type="button" @onclick="SendDivineMessage">Send</button>
        </div>
    </div>

    <!-- Perform Miracle -->
    <button class="action btn btn-outline-light"
            type="button"
            title="Perform Miracle"
            data-bs-toggle="collapse"
            data-bs-target="#miracles">
        <i class="bi bi-stars"></i>
    </button>
    <div id="miracles"
         class="btn-group-vertical float-left collapse"
         role="group"
         aria-label="Miracles"
         data-bs-parent="#primary-actions">
        <button class="btn miracle btn-outline-light" type="button">
            A peddler visits <i class="bi bi-boxes"></i>
        </button>
        <button class="btn miracle btn-outline-light" type="button">
            A travelling doctor shows up <i class="bi bi-heart-pulse"></i>
        </button>
        <button class="btn miracle btn-outline-light" type="button">
            A hunter stops by <i class="bi bi-backpack4"></i>
        </button>
        <button class="btn miracle btn-outline-light" type="button">
            The escaped villagers reunite <i class="bi bi-person-walking"></i>
        </button>

        <button class="btn miracle btn-outline-light" type="button">
            Weather Control
        </button>
        <div>
            <button class="btn miracle btn-outline-light" type="button">
                Clear Sky
            </button>
            <button class="btn miracle btn-outline-light" type="button">
                Heavy Rain
            </button>
            <button class="btn miracle btn-outline-light" type="button">
                Snow
            </button>
            <button class="btn miracle btn-outline-light" type="button">
                Blizzard
            </button>
        </div>

        <button class="btn miracle btn-outline-light" type="button">
            Familiar
        </button>
        <div>
            <button class="btn miracle btn-outline-light" type="button">
                Unicorn
            </button>
            <button class="btn miracle btn-outline-light" type="button">
                Slime
            </button>
            <button class="btn miracle btn-outline-light" type="button">
                Chick
            </button>
            <button class="btn miracle btn-outline-light" type="button">
                Dog
            </button>
            <button class="btn miracle btn-outline-light" type="button">
                Cat
            </button>
        </div>
    </div>
</div>

@code {
    private WebUser? CurrentUser { get; set; } = null;
    private WebItemLocation? BibleLocation { get; set; } = null;

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        CurrentUser = await users.GetCurrentUserAsync();
        if (CurrentUser.BibleId.HasValue) {
            BibleLocation = await items.GetItemLocationAsync(CurrentUser.BibleId.Value);
        }
    }

    private string InputText { get; set; } = string.Empty;

    private async Task SendDivineMessage() {
        await divineMessages.SendDivineMessageAsync(InputText);
        Console.WriteLine($"Submitted: {InputText}");
        InputText = string.Empty;
    }
}